name: CI

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:
permissions:
  contents: read
  actions: read
  checks: write
jobs:
  checkov_scan_and_upload_results:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Get Start time
        id: starttime
        if: always()
        run: |
            start=$(date +%s)
            export TEMPORARY_END_TIME=$start

      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install checkov
          pip install gitpython

      - name: Run Checkov scan
        run: |
          checkov --directory .  -o junitxml > checkov_results.xml

      - name: Display Directory Contents and File Content
        if: always()
        run: |
          echo "Listing directory contents:"
          ls -la          
          echo "Displaying content of a specific file:"
          cat ./checkov_results.json

      - name: Calculate Execution Time and Update JUnit XML
        if: always()
        run: |
            # Berechnen Sie die Laufzeit
            EXECUTION_TIME=$(date +%s)-$TEMPORARY_END_TIME # Dies sollte durch die tatsächliche Berechnung ersetzt werden
            echo "laufzeit ist"
            echo $TEMPORARY_END_TIME

            # Lesen Sie die JUnit-XML-Datei
            JUNIT_XML=$(cat checkov_results.xml)
            
            # Fügen Sie die Laufzeit hinzu
            UPDATED_JUNIT_XML="${JUNIT_XML/<\/testsuite>/ <property name=\"executionTime\" value=\"$EXECUTION_TIME\"/><\/testsuite>}"
            
            # Schreiben Sie die aktualisierte JUnit-XML-Datei zurück
            echo "$UPDATED_JUNIT_XML" > checkov_results.xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: checkov_results.xml