name: CI

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:
permissions:
  contents: read
  actions: read
  checks: write
jobs:
  checkov_scan_and_upload_results:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Get Start time
        id: starttime
        if: always()
        run: |
            start=$(date +%s)
            echo "$start" > start_time.txt # Speichern Sie die Startzeit in einer Datei

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install checkov
          pip install gitpython

      - name: Run Checkov scan
        run: |
          checkov --directory .  -o junitxml > checkov_results.xml



      - name: Calculate Execution Time and Update JUnit XML
        if: always()
        run: |
            RUN END_TIME=$(date +%s%N) 
            END_TIME=$(date +%s%N) 
            START_TIME=$(cat start_time.txt)
            EXECUTION_TIME=$((END_TIME - START_TIME)) # Convert to seconds
            EXECUTION_TIME=$(echo "$EXECUTION_TIME" | awk '{print $1/1000000000}')
            sed -i "s/time=\"0\"/time=\"$EXECUTION_TIME\"/" checkov_results.xml
            echo "runtime is: " $EXECUTION_TIME

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: checkov_results.xml
      - name: Display Directory Contents and File Content
        if: always()
        run: |
            echo "Listing directory contents:"
            ls -la          
            echo "Displaying"
            cat ./checkov_results.xml
